# 📚 Sistema de Predicción de Abandono Escolar

![Python](https://img.shields.io/badge/Python-3.8%2B-blue)
![FastAPI](https://img.shields.io/badge/FastAPI-0.95.2-green)
![Streamlit](https://img.shields.io/badge/Streamlit-1.28.0-red)
![Scikit-learn](https://img.shields.io/badge/Scikit--learn-1.3.0-orange)

Sistema de machine learning para predecir el riesgo de abandono escolar de estudiantes universitarios, con interfaz web interactiva.

## 🚀 Características principales

- **Modelo predictivo**: Random Forest con 92% de precisión
- **API REST**: Implementada con FastAPI
- **Interfaz web**: Dashboard interactivo con Streamlit
- **Pipeline completo**: Preprocesamiento automático de datos
- **Sistema de recomendaciones**: Sugerencias basadas en el riesgo

## 📦 Estructura del proyecto

```
proyecto-abandono-escolar/
├── data/                   # Datos crudos y procesados
│   └── data.csv            # Dataset original
├── models/                 # Modelos entrenados
│   ├── model.joblib        # Modelo serializado
│   └── model_metadata.json # Metadatos del modelo
├── src/
│   ├── api.py              # API FastAPI
│   ├── app.py              # Aplicación Streamlit
│   └── train_model.py      # Script de entrenamiento
├── requirements.txt        # Dependencias
└── README.md               # Este archivo
```

## 🛠️ Instalación

1. Clonar el repositorio:
```bash
git clone https://github.com/tu-usuario/proyecto-abandono-escolar.git
cd proyecto-abandono-escolar
```

2. Crear y activar entorno virtual:
```bash
python -m venv venv
source venv/bin/activate  # Linux/Mac
venv\Scripts\activate     # Windows
```

3. Instalar dependencias:
```bash
pip install -r requirements.txt
```

## 🏃‍♂️ Ejecución

1. Entrenar el modelo:
```bash
python src/train_model.py
```

2. Iniciar la API (puerto 8000):
```bash
uvicorn src.api:app --reload
```

3. Iniciar la aplicación web (puerto 8501):
```bash
streamlit run src/app.py
```

## 🖥️ Uso del sistema

Accede a la interfaz web en `http://localhost:8501` y completa el formulario con los datos del estudiante para obtener:

- Predicción de riesgo (Alto/Bajo)
- Probabilidad porcentual
- Gráfico de riesgo
- Recomendaciones personalizadas

## 📊 Tecnologías utilizadas

- **Machine Learning**: Scikit-learn, Pandas, Joblib
- **Backend**: FastAPI, Uvicorn
- **Frontend**: Streamlit, Matplotlib
- **Gestión de datos**: Pandas, NumPy

## 🤝 Contribución

1. Haz fork del proyecto
2. Crea tu rama (`git checkout -b feature/nueva-funcionalidad`)
3. Haz commit de tus cambios (`git commit -m 'Añade nueva funcionalidad'`)
4. Haz push a la rama (`git push origin feature/nueva-funcionalidad`)
5. Abre un Pull Request

## 📄 Licencia

Este proyecto está bajo la licencia MIT. Ver el archivo [LICENSE](LICENSE) para más detalles.

## ✉️ Contacto

Para preguntas o colaboraciones, contáctame en [tu@email.com](mailto:tu@email.com)

---

Hecho con ❤️ por Pablo Rubiano, Oscar Leon, Monica Ramirez